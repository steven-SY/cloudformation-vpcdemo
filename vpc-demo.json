
{
  "AWSTemplateFormatVersion" : "2014-12-23",

  "Description" : "AWS Training - VPCDemo template",

  "Parameters" : {
		"KeyName" : {
			"Description" : "Key Pair used to launch the NAT instance.",
			"Type" : "String",
			"Default" : "mykey",
			"MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "Can contain only alphanumeric characters, spaces, dashes and underscores"
		},
		"NatInstanceType" : {
      "Type" : "String",
      "Default" : "t2.micro",
      "Description" : "EC2 instance type for the NAT instance , e.g. m1.small, m1.large, etc. Note: Instance rates apply.",
			"AllowedValues" : ["t2.micro", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "c1.medium", "c1.xlarge"],
    	"ConstraintDescription" : "Must be a valid EC2 NAT instance type."
    },
		"VpcIpCidrBlock" : {
			"Type" : "String",
			"Default" : "10.170.0.0/16",
			"Description" : "The IP CIDR block for the VPC."
		},
		"PublicSubnetIpCidrBlock_1" : {
			"Type" : "String",
			"Default" : "10.170.1.0/24",
			"Description" : "The IP CIDR block for the 1st public subnet."
		},
		"PublicSubnetIpCidrBlock_2" : {
			"Type" : "String",
			"Default" : "10.170.2.0/24",
			"Description" : "The IP CIDR block for the 2nd public subnet."
		},
		"PrivateSubnetIpCidrBlock_1" : {
			"Type" : "String",
			"Default" : "10.170.64.0/22",
			"Description" : "The IP CIDR block for the 1st private subnet."
		},
		"PrivateSubnetIpCidrBlock_2" : {
			"Type" : "String",
			"Default" : "10.170.128.0/22",
			"Description" : "The IP CIDR block for the 2nd private subnet."
		}
  },

  "Mappings" : {
		"AWSInstanceType2Arch" : {
	  	"t2.micro"    : { "Arch" : "64" },
      "m1.small"    : { "Arch" : "64" },
      "m1.medium"   : { "Arch" : "64" },
      "m1.large"    : { "Arch" : "64" },
      "m1.xlarge"   : { "Arch" : "64" },
      "m2.xlarge"   : { "Arch" : "64" },
      "m2.2xlarge"  : { "Arch" : "64" },
      "m2.4xlarge"  : { "Arch" : "64" },
      "c1.medium" 	: { "Arch" : "64" },
      "c1.xlarge" 	: { "Arch" : "64" }
    },
    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "64" : "ami-c6699baf" },
      "us-west-1"      : { "64" : "ami-3bcc9e7e" },
      "us-west-2"      : { "64" : "ami-52ff7262" },
      "eu-west-1"      : { "64" : "ami-0b5b6c7f" },
      "sa-east-1"      : { "64" : "ami-0039e61d" },
      "ap-southeast-1" : { "64" : "ami-02eb9350" },
      "ap-southeast-2" : { "64" : "ami-39d3be03" }
    },
    "APSE2AZs" : {
    	"AZ1" : "ap-southeast-2a",
    	"AZ2" : "ap-southeast-2b"
    }
  },

  "Resources" : {
	  "VPCDemo" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Ref" : "VpcIpCidrBlock" },
        "EnableDnsSupport" : true,
        "EnableDnsHostnames" : false,
        "InstanceTenancy" : "default",
        "Tags" : [
        	{"Key" : "Name", "Value": "VPCDemo"},
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
        ]
      }
    },

		"PublicSubnet_1" : {
	      "Type" : "AWS::EC2::Subnet",
	      "Properties" : {
	        "VpcId" : { "Ref" : "VPCDemo" },
					"CidrBlock" : { "Ref" : "PublicSubnetIpCidrBlock_1" },
					"AvailabilityZone" : "ap-southeast-2b",
	        "Tags" : [
	          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
	          {"Key" : "Network", "Value" : "Public" },
	          {"Key" : "Name", "Value" : "PublicSubnet"}
	        ]
	      }
	    },

			"InternetGateway" : {
	      "Type" : "AWS::EC2::InternetGateway"
	    },

	    "AttachGateway" : {
	       "Type" : "AWS::EC2::VPCGatewayAttachment",
	       "Properties" : {
	         "VpcId" : { "Ref" : "VPC" },
	         "InternetGatewayId" : { "Ref" : "InternetGateway" }
	       }
	    },

	    "PublicRouteTable" : {
	      "Type" : "AWS::EC2::RouteTable",
	      "Properties" : {
	        "VpcId" : {"Ref" : "VPC"},
	        "Tags" : [
	          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
	          {"Key" : "Network", "Value" : "Public" }
	        ]
	      }
	    },

	    "PublicRoute" : {
	      "Type" : "AWS::EC2::Route",
	      "Properties" : {
	        "RouteTableId" : { "Ref" : "PublicRouteTable" },
	        "DestinationCidrBlock" : "0.0.0.0/0",
	        "GatewayId" : { "Ref" : "InternetGateway" }
	      }
	    },

	    "PublicSubnetRouteTableAssociation" : {
	      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
	      "Properties" : {
	        "SubnetId" : { "Ref" : "PublicSubnet" },
	        "RouteTableId" : { "Ref" : "PublicRouteTable" }
	      }
	    },

	    "PublicNetworkAcl" : {
	      "Type" : "AWS::EC2::NetworkAcl",
	      "Properties" : {
	        "VpcId" : {"Ref" : "VPC"},
	        "Tags" : [
	          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
	          {"Key" : "Network", "Value" : "Public" }
	        ]
	      }
	    },

	    "InboundPublicNetworkAclEntry" : {
	      "Type" : "AWS::EC2::NetworkAclEntry",
	      "Properties" : {
	        "NetworkAclId" : {"Ref" : "PublicNetworkAcl"},
	        "RuleNumber" : "100",
	        "Protocol" : "6",
	        "RuleAction" : "allow",
	        "Egress" : "false",
	        "CidrBlock" : "0.0.0.0/0",
	        "PortRange" : {"From" : "0", "To" : "65535"}
	      }
	    },

	    "OutBoundPublicNetworkAclEntry" : {
	      "Type" : "AWS::EC2::NetworkAclEntry",
	      "Properties" : {
	        "NetworkAclId" : {"Ref" : "PublicNetworkAcl"},
	        "RuleNumber" : "101",
	        "Protocol" : "6",
	        "RuleAction" : "allow",
	        "Egress" : "true",
	        "CidrBlock" : "0.0.0.0/0",
	        "PortRange" : {"From" : "0", "To" : "65535"}
	      }
	    },

	    "PublicSubnetNetworkAclAssociation" : {
	      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
	      "Properties" : {
	        "SubnetId" : { "Ref" : "PublicSubnet" },
	        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
	      }
	    },

	    "PrivateSubnet" : {
	      "Type" : "AWS::EC2::Subnet",
	      "Properties" : {
	        "VpcId" : { "Ref" : "VPC" },
					"CidrBlock" : { "Ref" : "PrivateSubnetIpCidrBlock" },
	        "Tags" : [
	          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
	          {"Key" : "Network", "Value" : "Private" }
	        ]
	      }
	    },

	    "PrivateRouteTable" : {
	      "Type" : "AWS::EC2::RouteTable",
	      "Properties" : {
	        "VpcId" : {"Ref" : "VPC"},
	        "Tags" : [
	          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
	          {"Key" : "Network", "Value" : "Private" }
	        ]
	      }
	    },

			"PrivateNatRoute" : {
	      "Type" : "AWS::EC2::Route",
	      "Properties" : {
	        "RouteTableId" : { "Ref" : "PrivateRouteTable" },
	        "DestinationCidrBlock" : "0.0.0.0/0",
	        "InstanceId" : { "Ref" : "NatInstance" }
	      }
	    },

	    "PrivateSubnetRouteTableAssociation" : {
	      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
	      "Properties" : {
	        "SubnetId" : { "Ref" : "PrivateSubnet" },
	        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
	      }
	    },

	    "PrivateNetworkAcl" : {
	      "Type" : "AWS::EC2::NetworkAcl",
	      "Properties" : {
	        "VpcId" : {"Ref" : "VPC"},
	        "Tags" : [
	          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} },
	          {"Key" : "Network", "Value" : "Private" }
	        ]
	      }
	    },

	    "InboundPrivateNetworkAclEntry" : {
	      "Type" : "AWS::EC2::NetworkAclEntry",
	      "Properties" : {
	        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
	        "RuleNumber" : "100",
	        "Protocol" : "6",
	        "RuleAction" : "allow",
	        "Egress" : "false",
	        "CidrBlock" : "0.0.0.0/0",
	        "PortRange" : { "From" : "0", "To" : "65535"}
	      }
	    },

	    "OutBoundPrivateNetworkAclEntry" : {
	      "Type" : "AWS::EC2::NetworkAclEntry",
	      "Properties" : {
	        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
	        "RuleNumber" : "100",
	        "Protocol" : "6",
	        "RuleAction" : "allow",
	        "Egress" : "true",
	        "CidrBlock" : "0.0.0.0/0",
	        "PortRange" : {"From" : "0", "To" : "65535"}
	      }
	    },

	    "PrivateSubnetNetworkAclAssociation" : {
	      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
	      "Properties" : {
	        "SubnetId" : { "Ref" : "PrivateSubnet" },
	        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
	      }
	    },

		"NatInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "KeyName" : { "Ref" : "KeyName" },
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" }, { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "NatInstanceType" }, "Arch" ] } ] },
				"InstanceType" : { "Ref" : "NatInstanceType" },
				"NetworkInterfaces" : [ { "NetworkInterfaceId" : {"Ref" : "NatInstanceInterface"}, "DeviceIndex" : "0" } ],
				"Tags" : [
					{
						"Key" : "Name",
						"Value" : "NAT Instance"
					}
				]
      }
    },

		"NatInstanceInterface" : {
		      "Type" : "AWS::EC2::NetworkInterface",
		      "Properties" : {
		        "SubnetId" : { "Ref" : "PublicSubnet" },
		        "Description" :"Interface for control traffic such as SSH",
		        "GroupSet" : [ { "Ref" : "NatInstanceSecurityGroup" } ],
		        "SourceDestCheck" : "false",
		        "Tags" : [ {"Key" : "Network", "Value" : "Control"}]
		      }
		    },

		"NatInstanceIpAddress" : {
			"Type" : "AWS::EC2::EIP",
			"Properties" : {
				"Domain" : "vpc"
			}
		},

		"AssociateNatInstanceIpAddress" : {
      "Type" : "AWS::EC2::EIPAssociation",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : [ "NatInstanceIpAddress", "AllocationId" ]},
        "NetworkInterfaceId" : { "Ref" : "NatInstanceInterface" }
      }
    },

		"NatInstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable NAT for instances in private subnets",
				"VpcId" : { "Ref" : "VPC" },
        "SecurityGroupIngress" : [
					{
						"IpProtocol" : "tcp", "FromPort" : "0", "ToPort" : "65535", "CidrIp" : "0.0.0.0/0"
					}
				],
				"SecurityGroupEgress" : [
					{
						"IpProtocol" : "tcp", "FromPort" : "0", "ToPort" : "65535", "CidrIp" : "0.0.0.0/0"
					}
				]
      }
    }
  },

  "Outputs" : {
    "NatInstancePublicIP" : {
      "Description" : "Public Elastic IP address of the NAT instance.",
      "Value" : { "Ref" : "NatInstanceIpAddress" }
    }
  }
}
